version: '3.8'
services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: credito_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  mongodb:
    image: mongo:7.0
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 4
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
  api:
    image: ${DOCKER_USERNAME}/credito-api:latest
    build:
      context: ./credito-api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - db
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/credito_db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin123
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
  auditoria:
    image: ${DOCKER_USERNAME}/credito-auditoria:latest
    build:
      context: ./credito-auditoria
      dockerfile: Dockerfile
    depends_on:
      - mongodb
      - kafka
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/credito_db
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
  notificacoes:
    image: ${DOCKER_USERNAME}/credito-notificacoes:latest
    build:
      context: ./credito-notificacoes
      dockerfile: Dockerfile
    depends_on:
      - db
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/credito_db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin123
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
  frontend:
    image: ${DOCKER_USERNAME}/credito-frontend:latest
    build:
      context: ./credito-frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - api
  analitico:
    image: ${DOCKER_USERNAME}/credito-analitico:latest
    build:
      context: ./credito-analitico
      dockerfile: Dockerfile
    depends_on:
      - mongodb
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    restart: no
volumes:
  postgres_data:
  mongo_data: